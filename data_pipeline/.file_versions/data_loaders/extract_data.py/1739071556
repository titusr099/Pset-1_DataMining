if 'data_loader' not in globals():
    from mage_ai.data_preparation.decorators import data_loader
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test

import os
import pandas as pd
from mage_ai.io.mysql import MySQL

@data_loader
def load_data(*args, **kwargs):
    """
    Extrae todas las tablas de la base de datos MySQL y las devuelve como un diccionario de DataFrames.
    """
    db = MySQL(
        database=os.getenv("MYSQL_DATABASE"),
        host=os.getenv("MYSQL_HOST"),
        user=os.getenv("MYSQL_USER"),
        password=os.getenv("MYSQL_PASSWORD"),
        port=int(os.getenv("MYSQL_PORT"))
    )

    # Obtener nombres de todas las tablas en la base de datos
    query_tables = "SHOW TABLES;"
    tables_df = db.load(query_tables)
    table_names = tables_df.iloc[:, 0].tolist()  # Extraer nombres de las tablas

    print(f"ğŸ“Œ Tablas encontradas: {table_names}")

    # Extraer datos de cada tabla
    dataframes = {}
    for table in table_names:
        query = f"SELECT * FROM {table};"
        dataframes[table] = db.load(query)
        print(f"âœ… Tabla '{table}' extraÃ­da con {len(dataframes[table])} filas.")

    return dataframes  # Retorna un diccionario con DataFrames de cada tabla

@test
def test_output(output, *args) -> None:
    """
    Prueba que al menos una tabla fue extraÃ­da correctamente.
    """
    assert output, "No se extrajo ninguna tabla."
    assert isinstance(output, dict), "El resultado debe ser un diccionario de DataFrames."
    assert len(output) > 0, "No hay tablas extraÃ­das."